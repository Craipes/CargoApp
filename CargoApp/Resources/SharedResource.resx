<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="I need a driver" xml:space="preserve">
    <value>I need a driver</value>
  </data>
  <data name="I need a cargo" xml:space="preserve">
    <value>I need a cargo</value>
  </data>
  <data name="SearchFieldsDescription" xml:space="preserve">
    <value>Weight, volume and dimensions not necessarily to be filled in</value>
  </data>
  <data name="massUnit" xml:space="preserve">
    <value>t</value>
  </data>
  <data name="lengthUnit" xml:space="preserve">
    <value>m</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Create Request" xml:space="preserve">
    <value>Create request</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About project</value>
  </data>
  <data name="All Car Requests" xml:space="preserve">
    <value>All car requests</value>
  </data>
  <data name="All Cargo Requests" xml:space="preserve">
    <value>All cargo requests</value>
  </data>
  <data name="All Users" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Language:" xml:space="preserve">
    <value>Language:</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="No search results" xml:space="preserve">
    <value>No results found. Try changing your search parameters</value>
  </data>
  <data name="Hryvnia" xml:space="preserve">
    <value>hrn</value>
  </data>
  <data name="Car requests" xml:space="preserve">
    <value>Car requests</value>
  </data>
  <data name="Cargo requests" xml:space="preserve">
    <value>Cargo requests</value>
  </data>
  <data name="Cargo requests of" xml:space="preserve">
    <value>Cargo requests of</value>
  </data>
  <data name="Request Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Request Expired" xml:space="preserve">
    <value>Expired</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Something wrong" xml:space="preserve">
    <value>Whoops, something went wrong :(</value>
  </data>
  <data name="Car requests of" xml:space="preserve">
    <value>Car requests of</value>
  </data>
  <data name="Request creation" xml:space="preserve">
    <value>Request creation</value>
  </data>
  <data name="Request editing" xml:space="preserve">
    <value>Request editing</value>
  </data>
  <data name="Car search" xml:space="preserve">
    <value>Car search</value>
  </data>
  <data name="Cargo search" xml:space="preserve">
    <value>Cargo search</value>
  </data>
  <data name="Email is not necessary" xml:space="preserve">
    <value>Email is not necessary</value>
  </data>
  <data name="Volume or Dimensions" xml:space="preserve">
    <value>You can specify a free volume or measurements, both options are optional</value>
  </data>
  <data name="Confirm changes" xml:space="preserve">
    <value>Confirm changes</value>
  </data>
  <data name="Can't change status" xml:space="preserve">
    <value>Can't change status</value>
  </data>
  <data name="Open request" xml:space="preserve">
    <value>Open request</value>
  </data>
  <data name="Close request" xml:space="preserve">
    <value>Close request</value>
  </data>
  <data name="Hide request" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="Hide request admin" xml:space="preserve">
    <value>Hide as admin</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Car request" xml:space="preserve">
    <value>Car request</value>
  </data>
  <data name="Cargo request" xml:space="preserve">
    <value>Cargo request</value>
  </data>
  <data name="Request details" xml:space="preserve">
    <value>Request details</value>
  </data>
  <data name="Not specified" xml:space="preserve">
    <value>Not specified</value>
  </data>
  <data name="Responses" xml:space="preserve">
    <value>Responses</value>
  </data>
  <data name="Project About" xml:space="preserve">
    <value>The project was developed by a student of the IPZ-22-1 group, Roman Yurchuk, as a course project on the topic: “Web resource for cargo delivery”</value>
  </data>
  <data name="Users management" xml:space="preserve">
    <value>Users management</value>
  </data>
  <data name="Users management caption 1" xml:space="preserve">
    <value>In the “Requests” column, the first number means “requests for transport search” and the second means “requests for cargo search”.</value>
  </data>
  <data name="Users management caption 2" xml:space="preserve">
    <value>In the “Responses” column, the first number means “responses to transport search requests” and the second number means “responses to cargo search requests”.</value>
  </data>
  <data name="Received reviews" xml:space="preserve">
    <value>Received reviews</value>
  </data>
  <data name="Sent reviews" xml:space="preserve">
    <value>Sent reviews</value>
  </data>
  <data name="Requests" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Profile of user" xml:space="preserve">
    <value>Profile of user</value>
  </data>
  <data name="Update data" xml:space="preserve">
    <value>Update data</value>
  </data>
  <data name="Last user requests" xml:space="preserve">
    <value>Last user requests</value>
  </data>
  <data name="View all" xml:space="preserve">
    <value>View all</value>
  </data>
  <data name="No recent requests" xml:space="preserve">
    <value>No recent requests</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
</root>