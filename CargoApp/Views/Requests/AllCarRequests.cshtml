@inject IHtmlLocalizer<SharedResource> Localizer
@model AllCarRequestsViewModel
@{
    ViewData["Title"] = "Car Requests";
}

@if (Model.Id == null)
{
    <h2 class="mb-4">@Localizer["All Car Requests"]</h2>
}
else
{
    <h2 class="mb-4">@Localizer["Car requests of"] <a asp-action="Profile" asp-controller="Account" asp-route-id="@Model.Id">@Model.Name</a></h2>
}
@if (Model != null)
{
    @for (int i = 0; i < Model.Requests.Count; i++)
    {
        var request = Model.Requests[i];
        <div class="border-1 list-group-item @(request.CanBeResponded ? "" : "list-group-item-dark")">
            @if (request.CanBeResponded)
            {
                <span class="badge bg-success">@Localizer["Request Active"]</span>
            }
            else
            {
                <span class="badge bg-danger">@Localizer["Request Expired"]</span>
            }
            <span class="badge bg-secondary">@Html.DisplayFor(model => request.RequestType)</span>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.ContactName)</span>
                <span class="col-6">@Html.DisplayFor(model => request.ContactName)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.ContactPhoneNumber)</span>
                <span class="col-6">@Html.DisplayFor(model => request.ContactPhoneNumber)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.DeparturePlace)</span>
                <span class="col-6">@Html.DisplayFor(model => request.DeparturePlace)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.DestinationPlace)</span>
                <span class="col-6">@Html.DisplayFor(model => request.DestinationPlace)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.EarlyDepartureDate)</span>
                <span class="col-6">@Html.DisplayFor(model => request.EarlyDepartureDate)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.LateDepartureDate)</span>
                <span class="col-6">@Html.DisplayFor(model => request.LateDepartureDate)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.Cargo.TrailerType)</span>
                <span class="col-6">@Html.DisplayFor(model => request.Cargo.TrailerType)</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.Cargo.Mass)</span>
                <span class="col-6">@Html.DisplayFor(model => request.Cargo.Mass) @Localizer["massUnit"]</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.Cargo.Volume)</span>
                <span class="col-6">@Html.DisplayFor(model => request.Cargo.Volume) @Localizer["lengthUnit"]³ (@(request.Cargo.Length == null ? "-" : (request.Cargo.Length.Value.ToString("F2")) + " " + Localizer["lengthUnit"].Value) x @(request.Cargo.Width == null ? "-" : (request.Cargo.Width.Value.ToString("F2")) + " " + Localizer["lengthUnit"].Value) x @(request.Cargo.Height == null ? "-" : (request.Cargo.Height.Value.ToString("F2") + " " + Localizer["lengthUnit"].Value)))</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.Price)</span>
                <span class="col-6">@Html.DisplayFor(model => request.Price) грн (@Html.DisplayFor(model => request.PriceType))</span>
            </div>
            <div class="row">
                <span class="fw-bold col-6">@Html.DisplayNameFor(model => request.AddTime)</span>
                <span class="col-6">@Html.DisplayFor(model => request.AddTime)</span>
            </div>
            <div class="row justify-content-between">
                <a class="btn btn-primary mt-2 col-4" asp-action="CarRequestDetails" asp-controller="Requests" asp-route-id="@request.Id">@Localizer["View"]</a>
                <a class="btn btn-warning mt-2 col-4" asp-action="EditCarRequest" asp-controller="Requests" asp-route-id="@request.Id">@Localizer["Edit"]</a>
            </div>
        </div>
    }

    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.Page > 1 ? "" : "disabled")">
                <a class="page-link" asp-route-page="@(Model.Page - 1)">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @{
                int min = Math.Max(1, Model.Page - 2);
                int max = Math.Min(Model.MaxPages, Model.Page + 2);
            }
            @for (int i = min; i <= max; i++)
            {
                if (Model.Page == i)
                {
                    <li class="page-item active">
                        <a class="page-link">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" asp-route-page="@i">@i</a>
                    </li>
                }
            }

            <li class="page-item  @(Model.Page < Model.MaxPages ? "" : "disabled")">
                <a class="page-link" asp-route-page="@(Model.Page + 1)">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}
else
{
    <h3>@Localizer["Something wrong"]</h3>
}
